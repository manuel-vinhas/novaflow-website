{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mfpsv/nextjs-starter-kit/nextjs-starter-kit/utils/registry.ts"],"sourcesContent":["import { createAnthropic } from \"@ai-sdk/anthropic\";\nimport { createDeepSeek } from \"@ai-sdk/deepseek\";\nimport { createGroq } from '@ai-sdk/groq';\nimport { createOpenAI } from \"@ai-sdk/openai\";\nimport { experimental_createProviderRegistry as createProviderRegistry } from \"ai\";\n\n// create provider registry\nexport const registry = createProviderRegistry({\n  // register provider with prefix and default setup:\n  anthropic: createAnthropic({\n    // custom settings\n    apiKey: process.env.ANTHROPIC_API_KEY,\n  }),\n  // register provider with prefix and custom setup:\n  openai: createOpenAI({\n    apiKey: process.env.OPENAI_API_KEY,\n  }),\n  deepseek: createDeepSeek({\n    apiKey: process.env.DEEPSEEK_API_KEY,\n  }),\n  groq: createGroq({\n    // custom settings\n    apiKey: process.env.GROQ_API_KEY,\n  }),\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAGO,MAAM,WAAW,CAAA,GAAA,sJAAA,CAAA,sCAAsB,AAAD,EAAE;IAC7C,mDAAmD;IACnD,WAAW,CAAA,GAAA,4JAAA,CAAA,kBAAe,AAAD,EAAE;QACzB,kBAAkB;QAClB,QAAQ,QAAQ,GAAG,CAAC,iBAAiB;IACvC;IACA,kDAAkD;IAClD,QAAQ,CAAA,GAAA,yJAAA,CAAA,eAAY,AAAD,EAAE;QACnB,QAAQ,QAAQ,GAAG,CAAC,cAAc;IACpC;IACA,UAAU,CAAA,GAAA,2JAAA,CAAA,iBAAc,AAAD,EAAE;QACvB,QAAQ,QAAQ,GAAG,CAAC,gBAAgB;IACtC;IACA,MAAM,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAD,EAAE;QACf,kBAAkB;QAClB,QAAQ,QAAQ,GAAG,CAAC,YAAY;IAClC;AACF","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mfpsv/nextjs-starter-kit/nextjs-starter-kit/app/api/chat/route.ts"],"sourcesContent":["import { registry } from \"@/utils/registry\";\nimport { groq } from \"@ai-sdk/groq\";\nimport {\n  extractReasoningMiddleware,\n  streamText,\n  experimental_wrapLanguageModel as wrapLanguageModel,\n} from \"ai\";\n\n// Allow streaming responses up to 30 seconds\nexport const maxDuration = 30;\n\nexport async function POST(req: Request) {\n  const {\n    messages,\n    model,\n    temperature,\n    maxTokens,\n    topP,\n    frequencyPenalty,\n    presencePenalty,\n    systemPrompt,\n  } = await req.json();\n\n  console.log(\"model\", model);\n\n  const defaultSystemPrompt = `\n    You are an advanced AI assistant in an interactive playground environment. Your primary goals are:\n    1. Knowledge & Assistance: Share knowledge and provide assistance across a wide range of topics\n    2. Code & Technical Help: Offer coding help, debug issues, and explain technical concepts\n    3. Clear Communication: Communicate clearly and effectively, using appropriate technical depth\n    4. Safety & Ethics: Maintain safety and ethical behavior, avoiding harmful or malicious content\n\n    Guidelines:\n    - Be direct and concise in responses\n    - Show code examples when relevant\n    - Explain complex topics in digestible parts\n    - Maintain a helpful and professional tone\n    - Acknowledge limitations and uncertainties\n    - Prioritize user safety and ethical considerations\n  `;\n\n  const role =\n    messages?.[messages?.length - 1].role === \"user\" ? \"user\" : \"assistant\";\n\n  const enhancedModel = wrapLanguageModel({\n    model: groq(\"deepseek-r1-distill-llama-70b\"),\n    middleware: extractReasoningMiddleware({ tagName: \"think\" }),\n  });\n\n  const result = streamText({\n    model:\n      model === \"deepseek:deepseek-reasoner\"\n        ? enhancedModel\n        : registry.languageModel(model),\n    messages,\n    temperature: temperature || 0.7,\n    maxTokens: maxTokens || 1000,\n    topP: topP || 0.9,\n    frequencyPenalty: frequencyPenalty || 0.0,\n    presencePenalty: presencePenalty || 0.0,\n    system: systemPrompt || defaultSystemPrompt,\n    // tools,\n    maxSteps: 5,\n    onStepFinish({\n      text,\n      toolCalls,\n      toolResults,\n      finishReason,\n      usage,\n      stepType,\n    }) {\n      // your own logic, e.g. for saving the chat history or recording usage\n      console.log(\"stepType\", stepType);\n      console.log(\"text\", text);\n      console.log(\"finishReason\", finishReason);\n      console.log(\"usage\", usage);\n\n      if (finishReason === \"tool-calls\") {\n        const toolInvocations = toolResults?.[0];\n        // saveToolResult(userId!, toolInvocations);\n        console.log(\"toolInvocations\", toolInvocations);\n      }\n    },\n    onFinish: ({ text, toolResults, toolCalls, finishReason }) => {\n      console.log(\"text\", text);\n      console.log(\"finishReason\", finishReason);\n      // insertMessage(userId!, \"assistant\", text);\n    },\n  });\n\n  return result.toDataStreamResponse({\n    sendReasoning: true,\n  });\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAOO,MAAM,cAAc;AAEpB,eAAe,KAAK,GAAY;IACrC,MAAM,EACJ,QAAQ,EACR,KAAK,EACL,WAAW,EACX,SAAS,EACT,IAAI,EACJ,gBAAgB,EAChB,eAAe,EACf,YAAY,EACb,GAAG,MAAM,IAAI,IAAI;IAElB,QAAQ,GAAG,CAAC,SAAS;IAErB,MAAM,sBAAsB,CAAC;;;;;;;;;;;;;;EAc7B,CAAC;IAED,MAAM,OACJ,UAAU,CAAC,UAAU,SAAS,EAAE,CAAC,SAAS,SAAS,SAAS;IAE9D,MAAM,gBAAgB,CAAA,GAAA,sJAAA,CAAA,iCAAiB,AAAD,EAAE;QACtC,OAAO,CAAA,GAAA,uJAAA,CAAA,OAAI,AAAD,EAAE;QACZ,YAAY,CAAA,GAAA,sJAAA,CAAA,6BAA0B,AAAD,EAAE;YAAE,SAAS;QAAQ;IAC5D;IAEA,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,aAAU,AAAD,EAAE;QACxB,OACE,UAAU,+BACN,gBACA,mHAAA,CAAA,WAAQ,CAAC,aAAa,CAAC;QAC7B;QACA,aAAa,eAAe;QAC5B,WAAW,aAAa;QACxB,MAAM,QAAQ;QACd,kBAAkB,oBAAoB;QACtC,iBAAiB,mBAAmB;QACpC,QAAQ,gBAAgB;QACxB,SAAS;QACT,UAAU;QACV,cAAa,EACX,IAAI,EACJ,SAAS,EACT,WAAW,EACX,YAAY,EACZ,KAAK,EACL,QAAQ,EACT;YACC,sEAAsE;YACtE,QAAQ,GAAG,CAAC,YAAY;YACxB,QAAQ,GAAG,CAAC,QAAQ;YACpB,QAAQ,GAAG,CAAC,gBAAgB;YAC5B,QAAQ,GAAG,CAAC,SAAS;YAErB,IAAI,iBAAiB,cAAc;gBACjC,MAAM,kBAAkB,aAAa,CAAC,EAAE;gBACxC,4CAA4C;gBAC5C,QAAQ,GAAG,CAAC,mBAAmB;YACjC;QACF;QACA,UAAU,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE;YACvD,QAAQ,GAAG,CAAC,QAAQ;YACpB,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,6CAA6C;QAC/C;IACF;IAEA,OAAO,OAAO,oBAAoB,CAAC;QACjC,eAAe;IACjB;AACF","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}